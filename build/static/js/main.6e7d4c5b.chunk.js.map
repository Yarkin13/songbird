{"version":3,"sources":["components/MainContainer/BirdDescription.module.scss","App.module.scss","components/Result.module.scss","components/Button.module.scss","components/RoundList/RoundListItem.module.scss","components/UnknownBirdConatiner/UnknownBirdContainer.module.scss","components/Header/Logo.module.scss","components/MainContainer/BirdListItem.module.scss","assets/image/absolute-win.gif","components/Header/Header.module.scss","components/Header/Score.module.scss","components/RoundList/RoundList.module.scss","assets/image/unknownBird.jpg","components/UnknownBirdConatiner/UnknownBirdTitle.module.scss","components/BirdPlayer.module.scss","components/MainContainer/MainContainer.module.scss","components/MainContainer/BirdsList.module.scss","assets/audio/correct.mp3","assets/audio/error.mp3","components/Header/Logo.js","components/Header/Score.js","components/Header/Header.js","components/RoundList/RoundListItem.js","components/RoundList/RoundList.js","components/BirdImg.js","components/UnknownBirdConatiner/UnknownBirdTitle.js","components/BirdPlayer.js","components/UnknownBirdConatiner/UnknownBirdContainer.js","data/birds.js","components/MainContainer/BirdListItem.js","components/MainContainer/BirdsList.js","components/MainContainer/BirdDescription.js","components/MainContainer/MainContainer.js","components/Button.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","className","classes","firstChunk","secondChunk","Score","props","title","score","Header","wrapper","RoundListItem","id","currentRound","classNames","item","active","RoundList","map","bird","key","BirdImg","currentBird","completed","src","image","img","alt","name","unknownBird","UnknownBirdTitle","birdTitle","UnknownBirdPlayer","audioSrc","controls","player","UnknownBirdContainer","console","log","imgWrapper","wrapperPlayer","BirdPlayer","audio","birdsData","species","description","BirdListItem","onClick","checkBird","indicator","BirdsList","birdList","BirdsDescription","isStart","container","chosenBird","wrapper__description","begin","MainContainer","BirdDescription","Button","show","nextRound","hide","Result","absoluteWin","btn","startAgain","App","useState","setIsStart","setCurrentRound","attempts","setAttempts","rnd","Math","round","random","setScore","setCurrentBird","completedGame","setCompletedGame","setChosenBird","getCorrectSound","Audio","preload","correctSound","play","getIncorrectSound","incorrectSound","event","target","tagName","find","textContent","querySelector","classList","add","correct","incorrect","document","querySelectorAll","forEach","remove","noactive","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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NgB,QAAS,cACTC,YACE,itCACFpB,MAAO,mEACPiB,MACE,sFAEJ,CACE9B,GAAI,EACJgB,KAAM,iCACNgB,QAAS,YACTC,YACE,soCACFpB,MAAO,mEACPiB,MACE,yEAGN,CACE,CACE9B,GAAI,EACJgB,KAAM,yDACNgB,QAAS,kBACTC,YACE,snCACFpB,MAAO,iEACPiB,MACE,oJAEJ,CACE9B,GAAI,EACJgB,KAAM,6CACNgB,QAAS,oBACTC,YACE,6jCACFpB,MAAO,gEACPiB,MACE,8GAEJ,CACE9B,GAAI,EACJgB,KAAM,6CACNgB,QAAS,mBACTC,YACE,wwCACFpB,MAAO,iEACPiB,MACE,0FAEJ,CACE9B,GAAI,EACJgB,KAAM,uCACNgB,QAAS,kBACTC,YACE,gyCACFpB,MAAO,iEACPiB,MACE,0FAEJ,CACE9B,GAAI,EACJgB,KAAM,+DACNgB,QAAS,sBACTC,YACE,0vCACFpB,MAAO,mEACPiB,MACE,0GAEJ,CACE9B,GAAI,EACJgB,KAAM,iCACNgB,QAAS,sBACTC,YACE,uqCACFpB,MAAO,mEACPiB,MACE,oKAGN,CACE,CACE9B,GAAI,EACJgB,KAAM,2BACNgB,QAAS,oBACTC,YACE,uhCACFpB,MAAO,kEACPiB,MACE,0FAEJ,CACE9B,GAAI,EACJgB,KAAM,uCACNgB,QAAS,iBACTC,YACE,goCACFpB,MAAO,mEACPiB,MACE,uIAEJ,CACE9B,GAAI,EACJgB,KAAM,2BACNgB,QAAS,iBACTC,YACE,2hCACFpB,MAAO,iEACPiB,MACE,6FAEJ,CACE9B,GAAI,EACJgB,KAAM,iCACNgB,QAAS,mBACTC,YACE,upCACFpB,MAAO,mEACPiB,MACE,sFAEJ,CACE9B,GAAI,EACJgB,KAAM,uCACNgB,QAAS,qBACTC,YACE,+sCACFpB,MAAO,mEACPiB,MACE,qFAEJ,CACE9B,GAAI,EACJgB,KAAM,iCACNgB,QAAS,YACTC,YACE,soCACFpB,MAAO,iEACPiB,MACE,0FAGN,CACE,CACE9B,GAAI,EACJgB,KAAM,yDACNgB,QAAS,mBACTC,YACE,moCACFpB,MAAO,gEACP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","file":"static/js/main.6e7d4c5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"BirdDescription_wrapper__CejcS\",\"imgWrapper\":\"BirdDescription_imgWrapper__1p5ae\",\"wrapper__description\":\"BirdDescription_wrapper__description__LGjxa\",\"container\":\"BirdDescription_container__vig8G\",\"title\":\"BirdDescription_title__1ei31\",\"begin\":\"BirdDescription_begin__1TfJX\",\"description\":\"BirdDescription_description__34-3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2K_fF\",\"correct\":\"App_correct__3eCNN\",\"incorrect\":\"App_incorrect__DV0AT\",\"noactive\":\"App_noactive__1IzeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Result_wrapper__20Egj\",\"btn\":\"Result_btn__2czAw\",\"absoluteWin\":\"Result_absoluteWin__3kT8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"Button_hide__ro_zL\",\"wrapper\":\"Button_wrapper__Ny2J_\",\"show\":\"Button_show__1kljW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"RoundListItem_item__3204c\",\"active\":\"RoundListItem_active__2Js22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UnknownBirdContainer_wrapper__6a0Vl\",\"wrapperPlayer\":\"UnknownBirdContainer_wrapperPlayer__rVrJR\",\"imgWrapper\":\"UnknownBirdContainer_imgWrapper__qVbLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"firstChunk\":\"Logo_firstChunk__16gma\",\"secondChunk\":\"Logo_secondChunk__3I4bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bird\":\"BirdListItem_bird__1Uktl\",\"indicator\":\"BirdListItem_indicator__aDarf\"};","module.exports = __webpack_public_path__ + \"static/media/absolute-win.4967a7a8.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2H1Hv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Score_title__19GOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RoundList_wrapper__1mqYA\"};","module.exports = __webpack_public_path__ + \"static/media/unknownBird.02f0c0fb.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"birdTitle\":\"UnknownBirdTitle_birdTitle__1VWDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"BirdPlayer_player__3LaiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MainContainer_wrapper__2VTwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"birdList\":\"BirdsList_birdList__Z4Bo-\"};","module.exports = __webpack_public_path__ + \"static/media/correct.8e3d6124.mp3\";","module.exports = __webpack_public_path__ + \"static/media/error.32fc22b2.mp3\";","import React from 'react'\r\nimport classes from './Logo.module.scss'\r\n\r\nfunction Logo() {\r\n  return (<div><span className={classes.firstChunk}>Song</span><span className={classes.secondChunk}>bird</span></div>)\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './Score.module.scss'\r\n\r\nfunction Score(props) {\r\n  return <span className={classes.title}>Score:{props.score}</span>\r\n}\r\n\r\nScore.propTypes = {\r\n  score: PropTypes.number\r\n}\r\n\r\nexport default Score","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './Header.module.scss'\r\nimport Logo from './Logo'\r\nimport Score from './Score'\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className={classes.wrapper}>\r\n      <Logo></Logo>\r\n      <Score score={props.score}></Score>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  score: PropTypes.number\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './RoundListItem.module.scss'\r\nimport classNames from 'classnames'\r\n\r\n\r\nfunction RoundListItem(props) {\r\n  if(props.id === props.currentRound) {\r\n    return <li className={classNames(classes.item, classes.active)}>{props.title}</li>\r\n  } else {\r\n    return <li className={classes.item}>{props.title}</li>\r\n  }\r\n  \r\n}\r\n\r\nRoundListItem.propTypes = {\r\n  title: PropTypes.string,\r\n  id: PropTypes.number,\r\n  currentRound: PropTypes.number\r\n}\r\n\r\nexport default RoundListItem\r\n","import React from 'react'\r\nimport RoundListItem from './RoundListItem'\r\nimport classes from './RoundList.module.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction RoundList(props) {\r\n  const modes = [\r\n    {\r\n      id: 0,\r\n      title: 'Разминка',\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Воробьиные',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Лесные птицы',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Певчие птицы',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Хищные птицы',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Морские птицы',\r\n    },\r\n  ]\r\n  return (\r\n    <ul className={classes.wrapper}>\r\n      {modes.map((bird) => {\r\n        return <RoundListItem title={bird.title} key={bird.id } id={bird.id} currentRound={props.currentRound}></RoundListItem>\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nRoundList.propTypes = {\r\n  currentRound: PropTypes.number\r\n}\r\n\r\nexport default RoundList\r\n","import React from 'react'\r\nimport classes from './BirdImg.module.scss'\r\nimport unknownBird from '../assets/image/unknownBird.jpg'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction BirdImg(props) {\r\n  if (props.currentBird.completed) {\r\n    return <img src={props.currentBird.image} className={classes.img} alt={props.currentBird.name}></img>\r\n  } else {\r\n    return <img src={unknownBird} className={classes.img} alt={'unknownBird'}></img>\r\n  }\r\n}\r\n\r\nBirdImg.propTypes = {\r\n  currentBird: PropTypes.object\r\n}\r\n\r\nexport default BirdImg\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './UnknownBirdTitle.module.scss'\r\n\r\nfunction UnknownBirdTitle(props) {\r\n  let title = '***'\r\n  if(props.completed) {\r\n    title = props.title\r\n  }\r\n  return <div className={classes.birdTitle}>{title}</div>\r\n}\r\n\r\nUnknownBirdTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  completed: PropTypes.bool\r\n}\r\n\r\n\r\nexport default UnknownBirdTitle\r\n","import React from 'react'\r\nimport ReactAudioPlayer from 'react-audio-player'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './BirdPlayer.module.scss'\r\n\r\nfunction UnknownBirdPlayer(props) {\r\n  return <ReactAudioPlayer src={props.audioSrc} controls  className={classes.player}/>\r\n}\r\n\r\nUnknownBirdPlayer.propTypes = {\r\n  audioSrc: PropTypes.string\r\n}\r\n\r\n\r\nexport default UnknownBirdPlayer\r\n","import React from 'react'\r\nimport BirdImg from '../BirdImg'\r\nimport UnknownBirdTitle from './UnknownBirdTitle'\r\nimport BirdPlayer from '../BirdPlayer'\r\nimport classes from './UnknownBirdContainer.module.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction UnknownBirdContainer(props) {\r\n  console.log(props.currentBird.name)\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <div className={classes.imgWrapper}>\r\n        <BirdImg currentBird={props.currentBird}></BirdImg>\r\n      </div>\r\n      <div className={classes.wrapperPlayer}>\r\n        <UnknownBirdTitle\r\n          completed={props.currentBird.completed}\r\n          title={props.currentBird.name}\r\n        />\r\n        <BirdPlayer audioSrc={props.currentBird.audio}></BirdPlayer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nUnknownBirdContainer.propTypes = {\r\n  currentBird: PropTypes.object,\r\n}\r\n\r\nexport default UnknownBirdContainer\r\n","const birdsData = [\r\n  [\r\n    {\r\n      id: 1,\r\n      name: 'Ворон',\r\n      species: 'Corvus corax',\r\n      description:\r\n        'Ворон – крупная птица. Длина тела достигает 70 сантиметров, размах крыльев – до полутора метров. Вороны населяют окрестности Тауэра. В Англии бытует поверье, что в день, когда черные вороны улетят от Тауэра, монархия рухнет.',\r\n      image: 'https://live.staticflickr.com//65535//49298804222_474cfe8682.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/XIQVMQVUPP/XC518684-Grands%20corbeaux%2009012020%20Suzon.mp3',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Журавль',\r\n      species: 'Grus grus',\r\n      description:\r\n        'Звуки, издаваемые журавлем, похожи на звонкое «кур-лы – кур-лы». Журавли чаще всего поют дуэтом – одна птица начинает запев со слога «кур», а вторая подхватывает «лы». Если птица поёт одна, то она издает только звук «кур».',\r\n      image: 'https://live.staticflickr.com/65535/49221158846_b0b69a58f1.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC512582-190604_1087_Grus_tok.mp3',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Ласточка',\r\n      species: 'Delichon urbicum',\r\n      description:\r\n        'Для ласточек характерно негромкое щебетание. Песни ласточек не смолкают на протяжении всего лета. Исследователи различают у птиц до 6 щебечущих звуков: «вит», «ви-вит», «чивит», «чиривит» и т.п. Ласточки любят петь дуэтом.',\r\n      image: 'https://live.staticflickr.com//65535//48539007512_5029d2a9a0.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC489247-190724_09.10h_huiszwaluw_biesbosch_amaliahoeve_roep_100%2Bex_fouragerend_gezien_%20%282%29.mp3',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Козодой',\r\n      species: 'Caprimulgus europaeus',\r\n      description:\r\n        'Козодой – неприметная птица, известная благодаря своему голосу. Песня козодоя звучит как монотонная трель похожая на тарахтение мотоцикла. Такое дребезжание слышно от заката до рассвета, его тональность, частота и громкость изменяются. ',\r\n      image: 'https://live.staticflickr.com/65535/48456345286_dbc8530027.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC486956-190623_22.37h_nachtzwaluw_rechte%20heide_zang_ad%20_2ex_gezien_.mp3',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Кукушка',\r\n      species: 'Cuculus canorus',\r\n      description:\r\n        'Кукушку назвали так из-за особенностей ее песен. Звонкое «ку-ку» не спутать ни с какой другой птицей. Кукушки не строят гнезда, их потомство выращивают другие виды пернатых, которым кукушки подбрасывают свои яйца.',\r\n      image: 'https://live.staticflickr.com/65535/48377838151_e15f430ec1.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC501461-190616_08.13h_koekoek_brabantse%20biesbosch%20jantjesplaat_roep_1%20ex_ad%20m_ter%20plaatse%20zingend_gezien_.mp3',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Синица',\r\n      species: 'Parus major',\r\n      description:\r\n        'В щебетании синиц различают более 40 различных звуковых сочетаний. Поют они практически круглый год, немного затихая только зимой. Синицы настоящие санитары леса. Одна пара синиц в период гнездования оберегает от вредителей десятки деревьев.',\r\n      image: 'https://live.staticflickr.com//65535//49366042493_c48c81d58d.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/RFGQDPLDEC/XC518417-Kj%C3%B8ttmeis%20XC%20Helg%C3%B8ya%20Elias%20A.%20Ryberg20200108133922_079.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      id: 1,\r\n      name: 'Воробей',\r\n      species: 'Passer domesticus',\r\n      description:\r\n        'Воробьи являются самыми известными и узнаваемыми пернатыми. Их легко узнать по пестрому оперению и задорному чириканью. Воробьи относятся к синатропному виду — они селятся поблизости к человеческому жилищу.',\r\n      image: 'https://live.staticflickr.com//65535//49366595303_06cf65b07e.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/CXFHOPIVAS/XC503224-191020_0134.mp3',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Грач',\r\n      species: 'Corvus frugilegus',\r\n      description:\r\n        'Грачи очень умные и сообразительные птицы. С помощью клюва они создают и используют простейшие орудия. У грачей развит рефлекс на звуки трактора. Услышав «тарахтение», они летят на звук – трактор пашет землю, значит, в этом месте много корма.',\r\n      image: 'https://live.staticflickr.com//65535//49347123322_291c86b016.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/RLRHCUIPIY/XC512540-gawron%20Suble%2019.12.19%20%2012.35.mp3',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Галка',\r\n      species: 'Coloeus monedula',\r\n      description:\r\n        'Слово «галка» произошло из старославянского языка и переводится как «чёрный». Этим словом часто называют воронов или других черных птиц. Латинское название галки «monedula» связывают со словами монета за любовь птицы к блестящим и ярким вещам.',\r\n      image: 'https://live.staticflickr.com//65535//49237149586_993cf685c5.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC510498-Coloeus%20monedula_2019.11.13_11.55_01.mp3',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Певчий дрозд',\r\n      species: 'Turdus philomelos',\r\n      description:\r\n        'Дрозд — лучший певец из отряда воробьиных. Песня состоит только из красивых звучных свистов и коротких трелей. Чаще всего её можно услышать в утреннее и вечернее время. Поют дрозды в течении всего периода гнездования.',\r\n      image: 'https://live.staticflickr.com/65535/48979125763_e2534f54bd.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC513326-190704_1146_TF-Glogow.mp3',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Сорока',\r\n      species: 'Pica pica',\r\n      description:\r\n        'Сорока очень трудолюбивая птица. Она строит до восьми гнёзд, а потом выбирает из них самое лучшее. Вход в гнездо сорок всегда обращен на юг, чтобы в жилище было теплее. Сороки являются единственными птицами, которые узнают себя в зеркале.',\r\n      image: 'https://live.staticflickr.com//65535//49360363066_ff02bb6a73.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC500868-Pica%20pica2019.08.23_09.18_02.mp3',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Сойка',\r\n      species: 'Garrulus glandarius',\r\n      description:\r\n        'Когда сойка волнуется, хохолок на её голове взъерошивается. Птица старается создать устрашающее зрелище. Сойки умеют имитировать голоса других птиц, животных и звуки, которые создает человек. На зиму они делают большие запасы желудей и орехов.',\r\n      image: 'https://live.staticflickr.com//65535//49369678956_9a7465c7f4.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/TFOGOENSTQ/XC501517-191008_1590%201300.%20Eichelh%C3%A4her%20D%2C%20NW%2C%20LEV.%20Stephan%20Risch.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      id: 1,\r\n      name: 'Зяблик',\r\n      species: 'Fringilla coelebs',\r\n      description:\r\n        'В дикой природе насчитывается 450 видов зябликов. Зимой зяблики ведут стайный образ жизни. Иногда в их семьях можно увидеть воробьев. Запевают зяблики весной, с наступлением брачного периода. Их пение – это заливистые многоминутные рулады.',\r\n      image: 'https://live.staticflickr.com/65535/49143150817_2d3a2f6c1e.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC512407-150622_03%20zi%C4%99ba%20%282%29.mp3',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Клёст',\r\n      species: 'Loxia curvirostra',\r\n      description:\r\n        'Клестов называют «рождественскими» птицами. В естественных условиях они дают потомство зимой – в январе. Эти птицы утепляют свои гнезда мхом и шерстью животных, потому птенцам не холодно. В поисках шишек клесты могут улетать за 3500 км от гнезда.',\r\n      image: 'https://live.staticflickr.com//65535//49365470123_f2de66bb35.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/OTVUCEGYZN/XC495381-Kruisbek%20roep%20NHD%20290619.mp3',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Горлица',\r\n      species: 'Streptopelia turtur',\r\n      description:\r\n        'Горлица обитает в смешанных и широколиственных лесах, а также в городских парках и поселках. Птицы часто выбирают места жизни рядом с человеком и легко привыкают к людям. Благодаря мелодичному приятному пению горлиц часто разводят в домашних условиях.',\r\n      image: 'https://live.staticflickr.com/65535/48063004977_84252f9ceb.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC324106-Turkawka_Streptopelia_turtur_Poland_Jarek_Matusiak_2011625_07.mp3',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Дятел',\r\n      species: 'Dendrocopos major',\r\n      description:\r\n        'Дятел – заметная и шумная птица, часто живет рядом с человеком. С середины января до конца июня можно услышать «барабанную дробь» дятлов – трель от вибрации веток под быстрыми ударами клюва птицы. В хорошую погоду дробь слышна в радиусе 1,5 км.',\r\n      image: 'https://live.staticflickr.com/65535/49339376578_e933426455.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC518928-AB-017%20dzi%C4%99cio%C5%82%20du%C5%BCy%20agresja%20%282%29.mp3',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Удод',\r\n      species: 'Upupa epops',\r\n      description:\r\n        'Удоды предпочитают жить на открытых ландшафтах с отдельными деревьями или рощами. Наиболее удобными для птицы являются лесостепь и саванна. Удод может выбирать места жительства рядом с человеком: пастбища, виноградники, фруктовые сады.',\r\n      image: 'https://live.staticflickr.com//65535//49226383598_6f8be86a06.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC477326-dudek%20%282%29.mp3',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Стриж',\r\n      species: 'Apus apus',\r\n      description:\r\n        'Стрижа можно увидеть практически в каждом уголке планеты. Они обитают как в лесных зонах, так и на открытых местностях. Живут стрижи крупными стаями. Большие колонии этих птиц можно увидеть в городах или на прибрежных скалах.',\r\n      image: 'https://live.staticflickr.com//65535//48386150031_7b749df74b.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/TMUAWSDHDJ/XC511871-G.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      id: 1,\r\n      name: 'Жаворонок',\r\n      species: 'Alauda arvensis',\r\n      description:\r\n        'Жаворонки — перелетные птицы. С начала сентября они отлетают на юг. Возвращаются они в начале марта, независимо от того, сошел снег или нет. По прилету жаворонков определяли наступление весны и пору, когда пора пахать землю.',\r\n      image: 'https://live.staticflickr.com/65535/47105096764_f751fba568.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC462158-Skowronek_Alauda_arvensis_Poland_Jarek_Matusiak_%20-006%20skowronek%20%282%29.mp3',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Соловей',\r\n      species: 'Luscinia luscinia',\r\n      description:\r\n        'Соловьи поют с начала мая и до конца лета. Каждая песня соловья состоит из 12 повторяющихся элементов, которые еще называют коленами. Кроме собственных трелей, соловьи легко и хорошо перенимают пение других птиц.',\r\n      image: 'https://live.staticflickr.com/7605/27669397735_f3c21758f2.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/HILVWSADVL/XC513809-R07_0052%20Thrush%20Nightingale%20Snipe.mp3',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Скворец',\r\n      species: 'Sturnus vulgaris',\r\n      description:\r\n        'Скворцы - перелётные птицы. Синхронный перелет больших стай скворцов называется мурмурацией. Это красивое и завораживающее явление – множество птиц будто танцуют в воздухе, образуя замысловатые фигуры, которые уменьшаются и увеличиваются в небе.',\r\n      image: 'https://live.staticflickr.com/65535/49357593971_9509fe1d7c.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC515519-2020.01.01_17.24_01.MP3',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Иволга',\r\n      species: 'Oriolus oriolus',\r\n      description:\r\n        'Мелодичность голоса иволги сравнивают со звучанием флейты. Человеку сложно разглядеть иволгу, так как она обитает высоко на деревьях. Иволга не только очень красивая, но и  полезная птица. Она уничтожает ядовитых гусениц, которых не поедают другие птицы.',\r\n      image: 'https://live.staticflickr.com/65535/47102184004_58a93380b9.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC491801-2019.07.07_06.28_01.mp3',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Свиристель',\r\n      species: 'Bombycilla garrulus',\r\n      description:\r\n        'У свиристели очень цепкие коготки, что помогает птице удерживаться на ветках и склевывать ягоды, которые труднее всего достать. В период ухаживаний самец предлагает самке ягоду или другое угощение. Если самка его принимает, то птицы создают пару.',\r\n      image: 'https://live.staticflickr.com//65535//49367433842_1b06da0e6b.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC517421-AB-004%20%282%29%20jemio%C5%82uszka.mp3',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Щегол',\r\n      species: 'Carduelis carduelis',\r\n      description:\r\n        'Щеглы поют красиво и мелодично. И в природе, и в неволе они щебечут почти круглый год. В пении щегла различают более 20 переливчатых трелей. Щеглы привыкают к людям, и даже могут возвратиться к хозяину после того, как их выпустили на волю',\r\n      image: 'https://live.staticflickr.com//65535//49366257253_db3ce48b9a.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC489265-190724_07.58h_putter_biesbosch_%20boompjes%20langs%20open%20water_zang_1ex_ad_niet%20gezien_.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      id: 1,\r\n      name: 'Орёл',\r\n      species: 'Aquila nipalensis',\r\n      description:\r\n        'В древние времена орел был символом солнца. Орлы часто парят над землей, при этом скорость их перемещения может достигать 240 км/ч. Иллюзия медленного движения происходит из-за высоты полета – более 700 метров',\r\n      image: 'https://live.staticflickr.com//4835//43867392960_7105d71e19.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/KTBTZAHSXF/10_Aquila_nipalensis_al02D85.mp3',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Коршун',\r\n      species: 'Milvus migrans',\r\n      description:\r\n        'Коршуны – крупные хищники, в высоту они достигают около полуметра, а вес взрослых особей достигает 1 кг. Крылья узкие и длинные, их размах составляет 1,5 м. Коршуны часто гнездятся большими стаями и даже образуют крупные колонии.',\r\n      image: 'https://live.staticflickr.com//65535//48701190276_ee2a9ed594.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/SDPCHKOHRH/XC485740-2019-06-22%20Selenga%20Milan%20brun%20cris%20de%20quemandage%203.mp3',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Лунь',\r\n      species: 'Circus cyaneus',\r\n      description:\r\n        'Лунь – это небольшой сокол. Питается в основном мышевидными грызунами, основа его рациона – полёвки, хомяки, мыши. Оперение луня может быть пепельно-серым. С такой птицей связано сравнение «седой, как лунь».',\r\n      image: 'https://live.staticflickr.com/65535/49322743903_32f3922d9e.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC513498-190709_1175_Cir.cyan-f.mp3',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Сокол',\r\n      species: 'Falco peregrinus',\r\n      description:\r\n        'Латинское название сокола Falco произошло от слова «серп» из-за серповидной формы крыльев. Длинные и широкие крылья позволяют соколу высоко подниматься в небо и свободно парить. Скорость полёта сокола достигает 280-320 километров в час.',\r\n      image: 'https://live.staticflickr.com//65535//49310710607_92a3a145a9.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/MMEJYLOPDO/XC496049-Pilgrimsfalk_06.mp3',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Ястреб',\r\n      species: 'Accipiter gentilis',\r\n      description:\r\n        'Для всех ястребов характерны широкие и короткие крылья. Ещё один отличительный признак - белые «брови» над глазами. Славянские дружинники размещали изображение ястреба на своих знаменах, как символ отваги, мощи и безжалостности к врагам.',\r\n      image: 'https://live.staticflickr.com//65535//49024617331_b9d0d2c9b3.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/MMEJYLOPDO/XC512740-Duvh%C3%B6k_09.mp3',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Филин',\r\n      species: 'Bubo bubo',\r\n      description:\r\n        'Полет филина бесшумный, зрение очень острое. Эти особенности делают птицу непревзойденным ночным охотником. У филина нет естественных врагов, ни один зверь не охотится на взрослых птиц. А вот на птенцов нападают лисы и волки.',\r\n      image: 'https://live.staticflickr.com/65535/48137123012_393653c2e4.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/WNLIDKJKXT/XC518386-sense%20t%C3%ADtol.mp3',\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      id: 1,\r\n      name: 'Альбатрос',\r\n      species: 'Diomedea exulans',\r\n      description:\r\n        'Альбатрос - самая крупная летающая птица в мире. Размах крыльев достигает три с половиной, вес - десять килограммов. Большую часть жизни альбатросы проводят в воздухе, покрывая над океанскими просторами огромные расстояния',\r\n      image: 'https://live.staticflickr.com/7557/16260253965_8e9430cb66.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/WOEAFQRMUD/XC293087-Diomedea%20exulans151120_T254.mp3',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Олуша',\r\n      species: 'Sula nebouxii',\r\n      description:\r\n        'Особенностью голубоногой олуши является не только насыщенный ярко-синий цвет лапок, но еще и тот факт, что они очень теплые. В то время как другие виды птиц греют кладки своим телом, голубоногая олуша делает это с помощью лапок',\r\n      image: 'https://live.staticflickr.com/800/40645471394_4422e69ed8.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/YHKQPPJDVP/XC411507-171217_1491%20BF%20Booby%205ft%20IDLP%201230%20mp3%20amp.mp3',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Буревестник',\r\n      species: 'Puffinus griseus',\r\n      description:\r\n        'Размеры буревестниковых разные. Самые маленькие из них в длину составляют до 25 см, самые большие - до 1 м, при размахе крыльев около 2 м. Существует поверье, что появление буревестника в воздухе предвещает бурю, о чем говорит само название птицы.',\r\n      image: 'https://live.staticflickr.com//607//22136056020_935cb113f9.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/XQEVNREHJY/SHEARWATER%20Christmas%20Island_04_Motu_Isla%20de%20Pascua-Easter%20Island_CH_4MAR03_Alvaro%20Jaramillo.mp3',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Пеликан',\r\n      species: 'Pelecanus',\r\n      description:\r\n        'Пеликаны — обитатели морей и рек. Ходят они неуклюже, но хорошо летают и плавают. Питаются в основном рыбой, устраивают коллективные охоты — выстроившись полукругом хлопают по воде крыльями и клювами и вытесняют напуганную рыбу на мелководье.',\r\n      image: 'https://live.staticflickr.com/7885/46523771945_9496c2a191.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/XAMHIHFTZG/XC331138-call1.mp3',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Пингвин',\r\n      species: 'Aptenodytes forsteri',\r\n      description:\r\n        'Самец императорского пингвина достигает роста 130 см, его масса может приближаться к 50 кг. Из всех современных пингвинов этот вид – самый крупный. Питание пингвина состоит из рыбы, кальмаров и криля. Охотятся птицы в океане большими группами.',\r\n      image: 'https://live.staticflickr.com/5202/5252413926_8e013a3efd.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/OOECIWCSWV/XC449827-LS100829%20King%20Penguin%20call%20A.mp3',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Чайка',\r\n      species: 'Larus argentatus',\r\n      description:\r\n        'Чайки населяют берега морей, озёр, рек, водохранилищ, болот, часто гнездятся на островах. С конца прошлого века чайки стали появляться в крупных городах, где устраивает гнёзда на крышах зданий. Все чайки ведут колониальный образ жизни.',\r\n      image: 'https://live.staticflickr.com/65535/48577115317_7034201dde.jpg',\r\n      audio:\r\n        'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC501190-190801_06.50h_zilvermeeuw_duinen%20van%20goeree_roep_2ex_overvliegend_gezien_.mp3',\r\n    },\r\n  ],\r\n]\r\n\r\nexport default birdsData\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './BirdListItem.module.scss'\r\n\r\nfunction BirdListItem(props) {\r\n  return (\r\n    <li className={classes.bird} onClick={props.checkBird} id=\"bird\">\r\n      {props.title}\r\n      <span className={classes.indicator} id=\"indicator\"></span>\r\n    </li>\r\n  )\r\n}\r\n\r\nBirdListItem.propTypes = {\r\n  checkBird: PropTypes.func,\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default BirdListItem\r\n","import React from 'react'\r\nimport classes from './BirdsList.module.scss'\r\nimport birdsData from '../../data/birds'\r\nimport BirdListItem from './BirdListItem'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction BirdsList(props) {\r\n  return (\r\n    <ul className={classes.birdList}>\r\n      {birdsData[props.currentRound].map((bird) => {\r\n        return <BirdListItem key={bird.id} title={bird.name} checkBird={props.checkBird}></BirdListItem>\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nBirdsList.propTypes = {\r\n  currentRound: PropTypes.number,\r\n  checkBird: PropTypes.func\r\n}\r\n\r\nexport default BirdsList\r\n","import React from 'react'\r\nimport classes from './BirdDescription.module.scss'\r\nimport BirdImg from '../BirdImg'\r\nimport BirdPlayer from '../BirdPlayer'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction BirdsDescription(props) {\r\n  if (props.isStart) {\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.wrapper}>\r\n          <div className={classes.imgWrapper}>\r\n            <BirdImg currentBird={props.chosenBird}></BirdImg>\r\n          </div>\r\n          <div className={classes.wrapper__description}>\r\n            <p className={classes.title}>{props.chosenBird.name}</p>\r\n            <p className={classes.title}>{props.chosenBird.species}</p>\r\n            <BirdPlayer audioSrc={props.chosenBird.audio}></BirdPlayer>\r\n          </div>\r\n        </div>\r\n        <p className={classes.description}>{props.chosenBird.description}</p>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className={classes.container}>\r\n        <p className={classes.begin}>\r\n          Послушайте плеер и выберите птицу из списка\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBirdsDescription.propTypes = {\r\n  isStart: PropTypes.bool,\r\n  chosenBird: PropTypes.object,\r\n}\r\n\r\nexport default BirdsDescription\r\n","import React from 'react'\r\nimport classes from './MainContainer.module.scss'\r\nimport BirdsList from './BirdsList'\r\nimport BirdDescription from './BirdDescription'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction MainContainer(props) {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <BirdsList currentRound={props.currentRound} checkBird={props.checkBird} chosenBird={props.chosenBird}></BirdsList>\r\n      <BirdDescription chosenBird={props.chosenBird} isStart={props.isStart}></BirdDescription>\r\n    </div>\r\n  )\r\n}\r\n\r\nMainContainer.propTypes = {\r\n  currentRound: PropTypes.number,\r\n  checkBird: PropTypes.func,\r\n  chosenBird: PropTypes.object,\r\n  isStart: PropTypes.bool\r\n}\r\n\r\nexport default MainContainer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './Button.module.scss'\r\n\r\nfunction Button(props) {\r\n  if (props.currentBird.completed) {\r\n    return (\r\n      <div className={classes.wrapper}>\r\n        <button className={classes.show} onClick={props.nextRound}>\r\n        Следующий вопрос\r\n        </button>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className={classes.wrapper}>\r\n        <button\r\n          className={classes.hide}\r\n          onClick={props.nextRound}>\r\n            Следующий вопрос\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  currentBird: PropTypes.object,\r\n  nextRound: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport classes from './Result.module.scss'\r\nimport absoluteWin from '../assets/image/absolute-win.gif'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Result(props) {\r\n  if (props.score === 30) {\r\n    return (\r\n      <div className={classes.wrapper}>\r\n        <h1>Поздравляем c абсолютной победой</h1>\r\n        <h3>\r\n          Вы прошли викторину и заработали {props.score} из 30 возможных балов\r\n        </h3>\r\n        <div className={classes.absoluteWin}><img src={absoluteWin} alt={absoluteWin}></img></div>\r\n        <button className={classes.btn} onClick={props.startAgain}>\r\n          Попробывать еще раз\r\n        </button>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className={classes.wrapper}>\r\n        <h1>Поздравляем!</h1>\r\n        <h3>\r\n          Вы прошли викторину и заработали {props.score} из 30 возможных балов\r\n        </h3>\r\n        <button className={classes.btn} onClick={props.startAgain}>\r\n          Попробывать еще раз\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nResult.propTypes = {\r\n  score: PropTypes.number,\r\n  startAgain: PropTypes.func\r\n}\r\n\r\nexport default Result\r\n","import React, { useState } from 'react'\nimport classes from './App.module.scss'\nimport Header from './components/Header/Header'\nimport RoundList from './components/RoundList/RoundList'\nimport UnknownBirdContainer from './components/UnknownBirdConatiner/UnknownBirdContainer'\nimport MainContainer from './components/MainContainer/MainContainer'\nimport Button from './components/Button'\nimport Result from './components/Result'\nimport birdsData from './data/birds'\nimport correctSound from './assets/audio/correct.mp3'\nimport incorrectSound from './assets/audio/error.mp3'\n\nfunction App() {\n  let [isStart, setIsStart] = useState(false)\n  let [currentRound, setCurrentRound] = useState(0)\n  let [attempts, setAttempts] = useState(0)\n  const rnd = Math.round(0 + Math.random() * (5 - 0))\n  let [score, setScore] = useState(0)\n  let [currentBird, setCurrentBird] = useState({\n    id: birdsData[currentRound][rnd].id,\n    name: birdsData[currentRound][rnd].name,\n    species: birdsData[currentRound][rnd].species,\n    description: birdsData[currentRound][rnd].description,\n    image: birdsData[currentRound][rnd].image,\n    audio: birdsData[currentRound][rnd].audio,\n    completed: false,\n  })\n\n  let [completedGame, setCompletedGame] = useState(false)\n  const [chosenBird, setChosenBird] = useState({})\n  const nextRound = () => {\n    setIsStart(false)\n    setAttempts(0)\n    if (currentRound === 5) {\n      setCurrentRound(0)\n      setCompletedGame(true)\n    } else {\n      setCurrentRound((currentRound += 1))\n    }\n    const rnd = Math.round(0 + Math.random() * (5 - 0))\n    setCurrentBird({\n      id: birdsData[currentRound][rnd].id,\n      name: birdsData[currentRound][rnd].name,\n      species: birdsData[currentRound][rnd].species,\n      description: birdsData[currentRound][rnd].description,\n      image: birdsData[currentRound][rnd].image,\n      audio: birdsData[currentRound][rnd].audio,\n      completed: false,\n    })\n    document.querySelectorAll('#bird').forEach((bird) => {\n      bird.classList.remove(classes.noactive)\n    })\n    document.querySelectorAll('#indicator').forEach((bird) => {\n      bird.classList.remove(classes.correct)\n      bird.classList.remove(classes.incorrect)\n    })\n  }\n\n  const checkBird = (event) => {\n    if (event.target.tagName === 'SPAN') return\n    setIsStart(true)\n    const target = birdsData[currentRound].find(\n      (bird) => bird.name === event.target.textContent\n    )\n    target.completed = true\n    if (event.target.textContent === currentBird.name) {\n      setChosenBird(target)\n      setCurrentBird(target)\n      event.target.querySelector('#indicator').classList.add(classes.correct)\n      setScore((score = score + 5 + attempts))\n      getCorrectSound()\n    } else {\n      setChosenBird(target)\n      setAttempts((attempts -= 1))\n      if (!currentBird.completed) {\n        getIncorrectSound()\n        event.target\n          .querySelector('#indicator')\n          .classList.add(classes.incorrect)\n      }\n    }\n  }\n\n  const startAgain = () => {\n    const rnd = Math.round(0 + Math.random() * (5 - 0))\n    setScore(0)\n    setCurrentBird({\n      id: birdsData[currentRound][rnd].id,\n      name: birdsData[currentRound][rnd].name,\n      species: birdsData[currentRound][rnd].species,\n      description: birdsData[currentRound][rnd].description,\n      image: birdsData[currentRound][rnd].image,\n      audio: birdsData[currentRound][rnd].audio,\n      completed: false,\n    })\n    console.log(currentRound)\n    setCompletedGame(false)\n  }\n\n  const getCorrectSound = () => {\n    const audio = new Audio()\n    audio.preload = 'auto'\n    audio.src = correctSound\n    audio.play()\n  }\n\n  const getIncorrectSound = () => {\n    const audio = new Audio()\n    audio.preload = 'auto'\n    audio.src = incorrectSound\n    audio.play()\n  }\n\n  if (completedGame) {\n    return (\n      <div className={classes.wrapper}>\n        <Header score={score}></Header>\n        <RoundList currentRound={currentRound}></RoundList>\n        <Result score={score} startAgain={startAgain}></Result>\n      </div>\n    )\n  } else {\n    return (\n      <div className={classes.wrapper}>\n        <Header score={score}></Header>\n        <RoundList currentRound={currentRound}></RoundList>\n        <UnknownBirdContainer currentBird={currentBird}></UnknownBirdContainer>\n        <MainContainer\n          isStart={isStart}\n          currentRound={currentRound}\n          checkBird={checkBird}\n          chosenBird={chosenBird}></MainContainer>\n        <Button nextRound={nextRound} currentBird={currentBird}></Button>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}